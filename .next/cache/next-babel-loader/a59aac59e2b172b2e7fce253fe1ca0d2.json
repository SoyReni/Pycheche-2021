{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Github\\\\Pycheche-2021\\\\components\\\\layout\\\\Header.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from \"components/Link\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Grid, AppBar, Toolbar, Typography, List, ListItem, ListItemText, SwipeableDrawer, IconButton } from \"@material-ui/core\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { routes } from \"data/routes\";\n\nfunction ElevationScroll(props) {\n  const {\n    children\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: _objectSpread(_objectSpread({}, theme.mixins.toolbar), {}, {\n    marginBottom: `5em`,\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"4em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"2em\"\n    }\n  }),\n  logo: {\n    color: theme.palette.secondary.main,\n    width: \"max-content\",\n    fontSize: \"1.5rem\"\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  drawerIcon: {\n    height: `50px`,\n    width: `50px`,\n    color: `#fff`,\n    [theme.breakpoints.down(\"xs\")]: {\n      height: `40px`,\n      width: `40px`\n    }\n  },\n  drawer: {\n    backgroundColor: theme.palette.secondary.main,\n    padding: \"0 6em\"\n  },\n  link: {\n    fontSize: \"1.25em\",\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      color: theme.palette.info.main\n    }\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const iOS = false && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const {\n    0: openDrawer,\n    1: setOpenDrawer\n  } = useState(false);\n  const router = useRouter();\n  const path = routes;\n\n  const tabs = __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, path.map(({\n    name,\n    link\n  }) => __jsx(Grid, {\n    item: true,\n    key: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    className: classes.link,\n    style: {\n      fontWeight: router.pathname === link && \"bold\",\n      borderBottom: router.pathname === link && \"1px solid #757ce8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, name))))));\n\n  const drawer = __jsx(React.Fragment, null, __jsx(SwipeableDrawer, {\n    disableBackdropTransition: !iOS,\n    disableDiscovery: iOS,\n    open: openDrawer,\n    onClose: () => setOpenDrawer(false),\n    onOpen: () => setOpenDrawer(true),\n    classes: {\n      paper: classes.drawer\n    },\n    anchor: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.toolbarMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), __jsx(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, path.map(({\n    name,\n    link\n  }) => __jsx(ListItem, {\n    key: link,\n    divider: true,\n    button: true,\n    onClick: () => {\n      setOpenDrawer(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    style: {\n      color: router.pathname === link ? \"primary\" : \"rgb(107 107 107)\",\n      fontWeight: router.pathname === link && \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, name))))))), __jsx(IconButton, {\n    onClick: () => setOpenDrawer(!openDrawer),\n    disableRipple: true,\n    className: classes.drawerIconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, __jsx(MenuIcon, {\n    className: classes.drawerIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  })));\n\n  return __jsx(React.Fragment, null, __jsx(ElevationScroll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, __jsx(AppBar, {\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    disableGutters: true,\n    style: {\n      maxWidth: \"1280px\",\n      margin: \"0 auto\",\n      width: \"100%\",\n      padding: matches ? \"0 16px\" : \"24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"Pycheche\")), matches ? drawer : tabs))), __jsx(\"div\", {\n    className: classes.toolbarMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Github/Pycheche-2021/components/layout/Header.js"],"names":["Link","useRouter","React","useState","makeStyles","useTheme","useMediaQuery","Grid","AppBar","Toolbar","Typography","List","ListItem","ListItemText","SwipeableDrawer","IconButton","useScrollTrigger","MenuIcon","routes","ElevationScroll","props","children","trigger","disableHysteresis","threshold","cloneElement","elevation","useStyles","theme","toolbarMargin","mixins","toolbar","marginBottom","breakpoints","down","logo","color","palette","secondary","main","width","fontSize","drawerIconContainer","marginLeft","padding","backgroundColor","drawerIcon","height","drawer","link","info","Header","classes","iOS","test","navigator","userAgent","matches","openDrawer","setOpenDrawer","router","path","tabs","map","name","fontWeight","pathname","borderBottom","paper","appBar","maxWidth","margin"],"mappings":"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","sourcesContent":["import Link from \"components/Link\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport {\r\n  Grid,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  SwipeableDrawer,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { routes } from \"data/routes\";\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: `5em`,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginBottom: \"4em\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginBottom: \"2em\",\r\n    },\r\n  },\r\n  logo: {\r\n    color: theme.palette.secondary.main,\r\n    width: \"max-content\",\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  drawerIconContainer: {\r\n    marginLeft: \"auto\",\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  drawerIcon: {\r\n    height: `50px`,\r\n    width: `50px`,\r\n    color: `#fff`,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: `40px`,\r\n      width: `40px`,\r\n    },\r\n  },\r\n  drawer: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    padding: \"0 6em\",\r\n  },\r\n  link: {\r\n    fontSize: \"1.25em\",\r\n    color: theme.palette.secondary.main,\r\n    \"&:hover\": {\r\n      color: theme.palette.info.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  const router = useRouter();\r\n\r\n  const path = routes;\r\n\r\n  const tabs = (\r\n    <>\r\n      <Grid container justify=\"flex-end\" spacing={4}>\r\n        {path.map(({ name, link }) => (\r\n          <Grid item key={link}>\r\n            <Link href={link}>\r\n              <Typography\r\n                className={classes.link}\r\n                style={{\r\n                  fontWeight: router.pathname === link && \"bold\",\r\n                  borderBottom: router.pathname === link && \"1px solid #757ce8\",\r\n                }}\r\n              >\r\n                {name}\r\n              </Typography>\r\n            </Link>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n  const drawer = (\r\n    <>\r\n      <SwipeableDrawer\r\n        disableBackdropTransition={!iOS}\r\n        disableDiscovery={iOS}\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n        onOpen={() => setOpenDrawer(true)}\r\n        classes={{ paper: classes.drawer }}\r\n        anchor=\"right\"\r\n      >\r\n        <div className={classes.toolbarMargin} />\r\n        <List disablePadding>\r\n          {path.map(({ name, link }) => (\r\n            <ListItem\r\n              key={link}\r\n              divider\r\n              button\r\n              onClick={() => {\r\n                setOpenDrawer(false);\r\n              }}\r\n            >\r\n              <ListItemText disableTypography>\r\n                <Link href={link}>\r\n                  <Typography\r\n                    style={{\r\n                      color:\r\n                        router.pathname === link\r\n                          ? \"primary\"\r\n                          : \"rgb(107 107 107)\",\r\n                      fontWeight: router.pathname === link && \"bold\",\r\n                    }}\r\n                  >\r\n                    {name}\r\n                  </Typography>\r\n                </Link>\r\n              </ListItemText>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </SwipeableDrawer>\r\n      <IconButton\r\n        onClick={() => setOpenDrawer(!openDrawer)}\r\n        disableRipple\r\n        className={classes.drawerIconContainer}\r\n      >\r\n        <MenuIcon className={classes.drawerIcon} />\r\n      </IconButton>\r\n    </>\r\n  );\r\n  return (\r\n    <>\r\n      <ElevationScroll>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar\r\n            disableGutters\r\n            style={{\r\n              maxWidth: \"1280px\",\r\n              margin: \"0 auto\",\r\n              width: \"100%\",\r\n              padding: matches ? \"0 16px\" : \"24px\",\r\n            }}\r\n          >\r\n            <Link href=\"/\">\r\n              <Typography className={classes.logo}>Pycheche</Typography>\r\n            </Link>\r\n            {matches ? drawer : tabs}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n\r\n      <div className={classes.toolbarMargin} />\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}